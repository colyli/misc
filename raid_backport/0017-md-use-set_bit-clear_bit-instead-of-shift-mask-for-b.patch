From 3fd83717e47687817f5d3e45696bf22456d8b422 Mon Sep 17 00:00:00 2001
From: NeilBrown <neilb@suse.de>
Date: Sat, 23 Aug 2014 20:19:26 +1000
Subject: [PATCH] md: use set_bit/clear_bit instead of shift/mask for bi_flags
 changes.
Git-commit: 3fd83717e47687817f5d3e45696bf22456d8b422
Patch-mainline: v3.18-rc1
Reference: bsc#953048

Using {set,clear}_bit is more consistent than shifting and masking.

No functional change.

(colyli: rebased)

Signed-off-by: NeilBrown <neilb@suse.de>
Signed-off-by: Coly Li <colyli@suse.de>

---
 drivers/md/raid1.c  |    2 +-
 drivers/md/raid10.c |    6 +++---
 drivers/md/raid5.c  |    2 +-
 3 files changed, 5 insertions(+), 5 deletions(-)

--- a/drivers/md/raid1.c
+++ b/drivers/md/raid1.c
@@ -2739,7 +2739,7 @@ static sector_t sync_request(struct mdde
 						/* remove last page from this bio */
 						bio->bi_vcnt--;
 						bio->bi_size -= len;
-						bio->bi_flags &= ~(1<< BIO_SEG_VALID);
+						__clear_bit(BIO_SEG_VALID, &bio->bi_flags);
 					}
 					goto bio_full;
 				}
--- a/drivers/md/raid10.c
+++ b/drivers/md/raid10.c
@@ -3548,7 +3548,7 @@ static sector_t sync_request(struct mdde
 				/* remove last page from this bio */
 				bio2->bi_vcnt--;
 				bio2->bi_size -= len;
-				bio2->bi_flags &= ~(1<< BIO_SEG_VALID);
+				__clear_bit(BIO_SEG_VALID, &bio2->bi_flags);
 			}
 			goto bio_full;
 		}
@@ -4575,7 +4575,7 @@ read_more:
 	read_bio->bi_end_io = end_sync_read;
 	read_bio->bi_rw = READ;
 	read_bio->bi_flags &= (~0UL << BIO_RESET_BITS);
-	read_bio->bi_flags |= 1 << BIO_UPTODATE;
+	__set_bit(BIO_UPTODATE, &read_bio->bi_flags);
 	read_bio->bi_vcnt = 0;
 	read_bio->bi_size = 0;
 	r10_bio->master_bio = read_bio;
@@ -4631,7 +4631,7 @@ read_more:
 				/* Remove last page from this bio */
 				bio2->bi_vcnt--;
 				bio2->bi_size -= len;
-				bio2->bi_flags &= ~(1<<BIO_SEG_VALID);
+				__clear_bit(BIO_SEG_VALID, &bio2->bi_flags);
 			}
 			goto bio_full;
 		}
--- a/drivers/md/raid5.c
+++ b/drivers/md/raid5.c
@@ -4300,7 +4300,7 @@ static int chunk_aligned_read(struct mdd
 		rcu_read_unlock();
 		raid_bio->bi_next = (void*)rdev;
 		align_bi->bi_bdev =  rdev->bdev;
-		align_bi->bi_flags &= ~(1 << BIO_SEG_VALID);
+		__clear_bit(BIO_SEG_VALID, &align_bi->bi_flags);
 
 		if (!bio_fits_rdev(align_bi) ||
 		    is_badblock(rdev, align_bi->bi_sector, bio_sectors(align_bi),
